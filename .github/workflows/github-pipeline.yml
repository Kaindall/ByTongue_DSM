name: Build and Deploy to Azure WebApp

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AZURE_WEBAPP_NAME: bytongue
  AZURE_RG: byTongue
  DOCKER_REPO: kaindall/app-bytongue

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver-opts: network=host

    - name: Create image tag
      run: echo "TAG=build-$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile') }}-v2
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_REPO }}:${{ env.TAG }}
          ${{ env.DOCKER_REPO }}:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Update cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Save previous image tag
      id: save_prev_image
      run: |
        PREV_IMAGE=$(az webapp config container show \
          --name $AZURE_WEBAPP_NAME \
          --resource-group $AZURE_RG \
          --query "[?name=='DOCKER_CUSTOM_IMAGE_NAME'].value" -o tsv)
        echo "PREVIOUS_IMAGE=${PREV_IMAGE}" >> $GITHUB_ENV
        echo "Previous image: ${PREV_IMAGE}"

    - name: Update Azure WebApp
      run: |
        az webapp config container set \
          --name $AZURE_WEBAPP_NAME \
          --resource-group $AZURE_RG \
          --docker-custom-image-name $DOCKER_REPO:$TAG

    - name: Wait for deployment
      run: sleep 30

    - name: Health check
      id: health
      run: |
        STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health || echo "000")
        echo "Status code: $STATUS"
        if [ "$STATUS" != "200" ]; then
          echo "HEALTHCHECK_FAILED=true" >> $GITHUB_ENV
        fi

    - name: Rollback if failed
      if: env.HEALTHCHECK_FAILED == 'true'
      run: |
        echo "Rolling back to ${{ env.PREVIOUS_IMAGE }}..."
        az webapp config container set \
          --name $AZURE_WEBAPP_NAME \
          --resource-group $AZURE_RG \
          --docker-custom-image-name "${{ env.PREVIOUS_IMAGE }}"
        exit 1
