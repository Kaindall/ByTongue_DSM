name: Build and Deploy to Azure WebApp

on:
  push:
    branches: [ "main" ]

env:
  AZURE_WEBAPP_NAME: bytongue
  AZURE_RG: byTongue
  DOCKER_REPO: kaindall/app-bytongue

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Inicializar Github Actions
      uses: actions/checkout@v4

    - name: Criar a tag da imagem
      run: echo "TAG=build-$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

    - name: Dockerhub Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

    - name: Construir a imagem docker
      run: docker build . -t $DOCKER_REPO:$TAG -t $DOCKER_REPO:latest

    - name: Publicar imagem no Dockerhub
      run: |
        docker push $DOCKER_REPO:$TAG
        docker push $DOCKER_REPO:latest

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Salvar a tag da imagem atual — para rollback
      run: |
        PREV_IMAGE=$(az webapp config container show \
          --name $AZURE_WEBAPP_NAME \
          --resource-group $AZURE_RG \
          --query "linuxFxVersion" -o tsv)
        echo "PREVIOUS_IMAGE=$PREV_IMAGE" >> $GITHUB_ENV

    - name: Atualizar Az WebApp com a nova imagem
      run: |
        az webapp config container set \
          --name $AZURE_WEBAPP_NAME \
          --resource-group $AZURE_RG \
          --docker-custom-image-name $DOCKER_REPO:$TAG

    - name: Aguardar inicialização do WebApp — 30s
      run: sleep 30

    - name: Checar o deploy
      id: health
      run: |
        STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health || echo "000")
        echo "Status code: $STATUS"
        if [ "$STATUS" != "200" ]; then
          echo "HEALTHCHECK_FAILED=true" >> $GITHUB_ENV
        fi

    - name: Rollback se o deploy falhar
      if: env.HEALTHCHECK_FAILED == 'true'
      run: |
        echo "Rolling back to $PREVIOUS_IMAGE..."
        az webapp config container set \
          --name $AZURE_WEBAPP_NAME \
          --resource-group $AZURE_RG \
          --docker-custom-image-name $PREVIOUS_IMAGE
        exit 1
