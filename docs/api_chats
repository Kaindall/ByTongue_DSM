openapi: 3.0.3
info:
  title: Chats
  description: |-
    API de conversas da aplicação byTongue criado a partir das definições de "design first" ou API First, cujo se baseia na criação da documentação antes do desenvolvimento em si da ferramenta.
    
    TODO: Todas as Request e Response
    
  termsOfService: http://bytongue.com/terms/
  contact:
    email: contato@bytongue.com
  version: 0.1.1
servers:
  - url: https://bytongue.com/
tags:
  - name: chats
    description: Operações acerca das conversas
  - name: quiz
    description: TODO - Operações acerca dos questionários
paths:
  /ias/chats:
    post:
      tags:
        - chats
      summary: Criar uma nova conversa
      requestBody:
        description: Dados iniciais da conversa
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Usuário registrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 10
  /ias/chats/{chat_id}:
    get:
      tags:
        - chats
      summary: Buscar e retornar dados de uma conversa
      parameters:
        - name: chat_id
          in: path
          description: Id do usuário a ser buscado
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operação bem-sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'        
        '404':
          description: Usuário não encontrado
    post:
      tags:
        - chats
      summary: Enviar uma nova mensagem na conversa
      description: ""
      operationId: updateUserById
      parameters:
        - name: chat_id
          in: path
          description: Id do usuário a ser atualizado
          required: true
          schema:
            type: string
      requestBody:
        description: Valores a serem atualizados
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: Operação bem-sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserResponse'   
        '400':
          description: Requisição inválida
        '404':
          description: Usuário não encontrado
    delete:
      tags:
        - chats
      summary: Excluir a conversa
      description: Só pode ser utilizado através de um usuário autenticado
      parameters:
        - name: chat_id
          in: path
          description: Id do usuário a ser apagado
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operação bem-sucedida
        '400':
          description: Requisição inválida
        '404':
          description: Usuário não encontrado
  /ias/quiz:
    get:
      tags:
         - quiz
      summary: Pesquisar perguntas e respostas dinamicamente
      responses:
        '200':
          description: Operação bem-sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Requisição inválida
components:
  schemas:
    CreateUserRequest:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
        birthday:
          type: string
          format: date
      example:
        username: "genericUser"
        name: "Generic John"
        email: "generic@email.com"
        password: "123456"
        birthday: "15/09/1980"
    UpdateUserRequest:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
        birthday:
          type: string
          format: date
      example:
        name: "Generic Updated John"
    UserLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: "genericUser"
        password: "123456"
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: "genericUser"
        name:
          type: string
          example: "Generic John"
        email:
          type: string
          example: "generic@email.com"
        birthday:
          type: string
          format: date
          example: "15/09/1980"
    UpdateUserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: "genericUser"
        name:
          type: string
          example: "Generic Updated John"
        email:
          type: string
          example: "generic@email.com"
        birthday:
          type: string
          format: date
          example: "15/09/1980"
    ChatResponse:
      type: object
      properties:
        chat_id: 
          type: string
        title:
          type: string
        created_date:
          type: string
          format: date
        update_date:
          type: string
          format: date
      example:
        chat_id: "1565645-AHJSBIAS-21132"
        title: "Se você espera o inesperado, ele se torna esperado?"
        created_date: "22/05/2024"
        update_date: "25/05/2024"
    ChatsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ChatResponse'
      
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header